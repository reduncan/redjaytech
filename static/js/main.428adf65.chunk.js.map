{"version":3,"sources":["Components/HomePage.js","Components/AboutMe.js","Components/ContactMe.js","Components/DirectoryManipulator.js","Components/YelpClone.js","Components/FaceBell.js","App.js","serviceWorker.js","index.js"],"names":["withStyles","theme","root","backgroundColor","height","main","marginTop","backgroundImage","backgroundAttachment","backgroundPosition","backgroundRepeat","backgroundSize","appBar","boxShadow","position","icon","color","sectionTitle","background","sectionHeaderLeft","textAlign","sectionHeaderRight","whoWeAreCon","whatWeDo","whatWeDoCon","ourExperienceCon","props","classes","react_default","a","createElement","className","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Grid_default","container","item","xs","sm","md","sectionTitleRight","App","BrowserRouter","Fragment","CssBaseline_default","Route","exact","path","component","HomePage","AboutMe","ContactMe","DirectoryManipulator","YelpClone","FaceBell","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.428adf65.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst styles = theme => ({\n    root: {\n        backgroundColor: 'rgb(74, 73, 74)',\n        height: \"100vh\"\n    },\n    main: {\n        marginTop: 0,\n        height: \"100%\",\n        backgroundImage: 'url(\"/redjay-light.png\")',\n        backgroundAttachment: \"fixed\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n    },\n    appBar: {\n        backgroundColor: \"transparent !important\",\n        boxShadow: \"none\",\n        position: \"fixed\"\n    },\n    icon: {\n        color: 'rgb(237, 32, 36)'\n    },\n    sectionTitle: {\n        color: 'rgb(35, 35, 35)',\n        background: 'rgb(255, 255, 255)'\n    },\n    sectionHeaderLeft: {\n        textAlign: 'left',\n        marginTop: 86\n    },\n    sectionHeaderRight: {\n        textAlign: 'right',\n        marginTop: 86\n    },\n    whoWeAreCon: {\n        color: 'rgb(35, 35, 35)',\n        background: 'rgb(255, 255, 255)',\n        height: 200,\n        textAlign: 'center'\n    },\n    whatWeDo: {\n        height: 400,\n        backgroundImage: 'url(\"/redjay-grayscale.png\")',\n        backgroundAttachment: \"fixed\",\n        backgroundPosition: \"center\",\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\"\n    },\n    whatWeDoCon: {\n        color: 'rgb(35, 35, 35)',\n        background: 'rgb(255, 255, 255)',\n        height: 200,\n        textAlign: 'right',\n    },\n    ourExperienceCon: {\n        color: 'rgb(35, 35, 35)',\n        background: 'rgb(255, 255, 255)',\n        height: 200,\n        textAlign: 'right'\n    }\n});\n\nfunction HomePage(props) {\n\n    const { classes } = props;\n\n    return (\n        <div className={classes.root}>\n            <AppBar className={classes.appBar}>\n                <Toolbar>\n                    <IconButton aria-label=\"Menu\" className={classes.icon}>\n                        <MenuIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <div className={classes.main}></div>\n            <Grid container>\n                <Grid item xs={12} sm={12} md={6} className={classes.sectionTitle}>\n                    <h2 className={classes.sectionHeaderRight}>WHO WE ARE</h2>\n                </Grid>\n                <Grid item xs={12} sm={12} md={6} className={classes.whoWeAreCon}>\n                    <p>Bacon ipsum dolor amet picanha tongue meatball buffalo kevin strip steak, ground round sausage beef ribs pancetta tail flank. Meatloaf pork chop pork belly swine pastrami cow. Bresaola jowl ham andouille. Corned beef chuck ham strip steak jerky pork loin salami, boudin brisket kevin landjaeger. Beef shoulder tenderloin, biltong ribeye frankfurter strip steak drumstick. Tongue shoulder filet mignon, drumstick leberkas kielbasa beef ribs cupim corned beef bresaola.</p>\n                    <p>Bacon ipsum dolor amet doner turkey ball tip, shank venison ground round pig picanha pork belly biltong sausage swine brisket jowl. Kevin capicola short loin venison burgdoggen pig shank swine landjaeger buffalo chuck. Rump turkey shank burgdoggen ball tip tongue short loin hamburger. Ribeye pig flank short ribs jerky. Short ribs ball tip burgdoggen landjaeger, jerky andouille pastrami jowl boudin doner filet mignon turducken hamburger porchetta. Chuck capicola cupim biltong. Jowl buffalo fatback swine cow capicola ribeye pastrami biltong.</p>\n                </Grid>\n            </Grid>\n            <div className={classes.whatWeDo}></div>\n            <Grid container>\n                <Grid item xs={12} sm={12} md={6} className={classes.whatWeDoCon}>\n                    <p>Ground round flank tri-tip pork chop buffalo bacon hamburger, fatback ham hock. Boudin venison pancetta tongue pork shank picanha meatball porchetta landjaeger. Tongue beef chuck prosciutto, picanha tri-tip leberkas hamburger flank. Bresaola sausage turkey turducken pastrami. Shankle beef ribs flank alcatra bacon leberkas pork belly venison spare ribs prosciutto. T-bone swine shoulder kielbasa tenderloin. Biltong chuck meatball pancetta alcatra pork chop.</p>\n                </Grid>\n                <Grid item xs={12} sm={12} md={6} className={classes.sectionTitle}>\n                    <h2 className={classes.sectionHeaderLeft}>WHAT WE DO</h2>\n                </Grid>\n            </Grid>\n            <div className={classes.whatWeDo}></div>\n            <Grid container>\n                <Grid item xs={12} sm={12} md={6} className={classes.sectionTitleRight}>\n                    <h2 className={classes.sectionHeaderRight}>OUR EXPERIENCE</h2>\n                </Grid>\n                <Grid item xs={12} sm={12} md={6} className={classes.ourExperienceCon}>\n                    <p>Buffalo biltong ribeye ham, alcatra pastrami bresaola cupim cow. Ham shoulder porchetta turkey kielbasa, ground round flank meatloaf pork ribeye ball tip tri-tip. Shankle ham hock tongue kevin filet mignon pork belly prosciutto buffalo sausage hamburger landjaeger turducken turkey doner rump. T-bone bacon pork belly frankfurter shank meatloaf ribeye. Pancetta sausage venison bacon meatloaf picanha rump drumstick tongue andouille. Jerky landjaeger brisket, ground round t-bone ribeye andouille pancetta fatback jowl capicola corned beef pastrami pork belly ball tip.</p>\n                </Grid>\n            </Grid>\n        </div >\n    )\n};\n\nHomePage.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(HomePage);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n});\n\nfunction AboutMe(props) {\n    \n    const { classes } = props;\n\n    return (\n        <div>\n            <p>About Me</p>\n        </div>\n    )\n};\n\nAboutMe.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(AboutMe);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n});\n\nfunction ContactMe(props) {\n    \n    const { classes } = props;\n\n    return (\n        <div>\n            <p>About Me</p>\n        </div>\n    )\n};\n\nContactMe.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ContactMe);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n});\n\nfunction DirectoryManipulator(props) {\n    \n    const { classes } = props;\n\n    return (\n        <div>\n            <p>Directory Manipulator</p>\n        </div>\n    )\n};\n\nDirectoryManipulator.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DirectoryManipulator);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n});\n\nfunction YelpClone(props) {\n    \n    const { classes } = props;\n\n    return (\n        <div>\n            <p>Yelp Clone</p>\n        </div>\n    )\n};\n\nYelpClone.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(YelpClone);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\n});\n\nfunction FaceBell(props) {\n    \n    const { classes } = props;\n\n    return (\n        <div>\n            <p>Face Bell</p>\n        </div>\n    )\n};\n\nFaceBell.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FaceBell);","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport HomePage from './Components/HomePage';\nimport AboutMe from './Components/AboutMe';\nimport ContactMe from './Components/ContactMe';\nimport DirectoryManipulator from './Components/DirectoryManipulator';\nimport YelpClone from './Components/YelpClone';\nimport FaceBell from './Components/FaceBell';\n\nconst App = () => (\n  <BrowserRouter>\n    <React.Fragment>\n      <CssBaseline />\n      <Route exact path='/' component={HomePage} />\n      <Route path='/about-me' component={AboutMe} />\n      <Route path='/contact-me' component={ContactMe} />\n      <Route path='/directory-manipulator' component={DirectoryManipulator} />\n      <Route path='/yelp-clone' component={YelpClone} />\n      <Route path='/facebell' component={FaceBell} />\n    </React.Fragment>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}